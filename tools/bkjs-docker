#!/bin/sh
#
#  Author: Vlad Seryakov vseryakov@gmail.com
#  Nov 2021
#

case "$BKJS_CMD" in

  help|docker-help)
    echo ""
    echo "  docker-build-tag -t TAG [-version V] [-path .] [-root H] - build an image for the specified tag"
    echo "  docker-run-tag -t TAG [-path .] [-force] - run a container for the specified tag"
    echo "  docker-restart NAME - restart a container, for use with bkrsync"
    echo "  docker-compose-get - install docker compose plugin in /usr/local/bin"
    echo "  docker-ecr-login-get - install ECR login utility for docker in ~/bin"
    echo "  docker-init-binfmt - initialize local docker to support multiple platforms in the default builder by using binfmt"
    ;;

  docker-build-tag)
    tag=$(get_arg -tag)
    version=$(get_arg -version)
    path=$(get_arg -path .)
    root=$(get_arg -root .)

    [ ! -f $path/Dockerfile.$tag ] && echo "$BKJS_CMD: no Dockerfile.$tag found in $path" && exit 1

    [ -f $path/path.$tag ] && path="$root$(head -1 $path/path.$tag)"
    [ ! -d $root ] && echo "$BKJS_CMD: invalid $tag context path: $root" && exit 1

    if [ ! -f $root/.dockerignore -a -f $path/dockerignore.$tag ]; then
        cp $path/dockerignore.$tag $root/.dockerignore
        dockerignore=yes
    fi

    [ -f $path/build.$tag ] && cmd=$(cat $path/build.$tag|tr '\n' ' ')
    [ ! -z $version ] && cmd="$cmd -t $tag:$version"

    cmd="docker build --rm --progress=plain -t $tag -f $path/Dockerfile.$tag $cmd $root"
    debug $cmd

    $cmd
    rc=$?

    [ "$dockerignore" = "yes" ] && rm -f $root/.dockerignore
    exit $rc
    ;;

  docker-run-tag)
    tag=$(get_arg -tag)
    path=$(get_arg -path .)

    [ -z $tag ] && echo "$BKJS_CMD: -tag must be provided" && exit 1
    [ -f $path/run.$tag ] && cmd=$(cat $path/run.$tag|tr '\n' ' ')

    if [ "$(get_flag -force)" != "" ]; then
       pids=$(docker ps -aq -f name=$tag)
       [ ! -z $pids ] && docker rm -f $pids
    fi

    cmd="docker run -d --name $tag ${cmd:-$tag} $(get_all_args "-tag -path -force")"
    debug $cmd

    $cmd
    exit
    ;;

  docker-restart)
    exec docker restart $BKJS_ARGV0
    ;;

  docker-init-binfmt)
    docker run --rm --privileged linuxkit/binfmt:312ed1cb899fae229b5303ac6c0510ac58f331c8
    exit
    ;;

  docker-compose-get)
    wget -L -O /usr/local/bin/docker-compose https://github.com/docker/compose/releases/latest/download/docker-compose-$(uname -s)-$(uname -m)
    chmod 755 /usr/local/bin/docker-compose
    ln -s /usr/local/bin/docker-compose /usr/libexec/docker/cli-plugins/docker-compose
    exit
    ;;

  docker-ecr-login-get)
    go install github.com/awslabs/amazon-ecr-credential-helper/ecr-login/cli/docker-credential-ecr-login@latest
    mv ~/go/bin/docker-credential-ecr-login $BKJS_HOME/bin
    echo "{ \"auths\": {}, \"credsStore\": \"ecr-login\" }" > ~/.docker/config.json
    exit
    ;;

esac
