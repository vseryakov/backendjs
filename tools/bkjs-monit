#!/bin/bash
#
#  Author: Vlad Seryakov vseryakov@gmail.com
#  Sep 2013
#

case "$BKJS_CMD" in

  monit-init-system)
    delay=$(get_arg -delay 5)
    load=$(get_arg -load 7)
    space=$(get_arg -space 90)
    path=$(get_arg -path /)
    [ "$OS_TYPE" = "amazon" ] && delay=$(($delay*2))
    $ECHO "set daemon 30 with start delay $delay" > /etc/monit.d/system.conf
    $ECHO "check system \$HOST every 3 cycles if loadavg(1min) > $load for 15 cycles then alert" >> /etc/monit.d/system.conf
    $ECHO "check filesystem rootfs with path $path every 30 cycles if space usage > ${space}% then alert" >> /etc/monit.d/system.conf
    monit reload
    exit
    ;;

  monit-init-bkjs)
    find_user
    timeout=$(get_arg -timeout 30)
    $ECHO "check process $BKJS with pidfile \"$BKJS_HOME/var/master.pid\" start program = \"$BKJS_BIN run-master $(get_all_args)\" as uid $BKJS_USER and gid $BKJS_GROUP with timeout $timeout seconds stop program = \"$BKJS_BIN stop\"" > /etc/monit.d/$BKJS.conf
    monit reload
    exit
    ;;

  monit-stop-bkjs)
    if [ -f /etc/monit.d/$BKJS.conf ]; then
       rm /etc/monit.d/$BKJS.conf
       monit reload
    fi
    exit
    ;;

  monit-init-alerts)
    [ "$(get_flag -force)" != "" ] && rm -f /etc/monit.d/alert.conf
    if [ ! -f /etc/monit.d/alert.conf ]; then
        email=$(get_arg -alert-email)
        if [[ ! -z $email ]]; then
            user=$(get_arg -alert-user)
            host=$(get_arg -alert-host)
            password=$(get_arg -alert-password)
            events=$(get_arg -events "action,connection,data,pid,ppid,exec,content,resource,status,timeout")
            echo "Init monit alert: $email $events, $host, $user"
            [ "$events" != "" ] && events="only on { $events }"
            $ECHO "set alert $email $events" > /etc/monit.d/alert.conf
            $ECHO "set mail-format { from: $email }" >> /etc/monit.d/alert.conf
            if [[ ! -z $host ]]; then
                server="set mailserver $host"
                if match $host amazonaws; then server="$server port 465"; fi
                [[ ! -z $user ]] && server="$server username $user"
                [[ ! -z $password ]] && server="$server password $password"
                if match $host amazonaws; then server="$server using tlsv12"; fi
                $ECHO $server >> /etc/monit.d/alert.conf
            fi
            monit reload
        fi
    fi
    exit
    ;;

  monit-init)
    find_user
    name=$(get_arg -name)
    start=$(get_arg -start)
    stop=$(get_arg -stop)
    [ "$name" = "" -o "$start" = "" -o "$stop" = "" ] && echo "invalid init-monit arguments" && exit
    timeout=$(get_arg -timeout 5)
    cycles=$(get_arg -cycles)
    [ "$cycles" != "" ] && cycles="for $cycles cycles"
    echo -e "check process $name with pidfile \"$BKJS_HOME/var/$name.pid\" start program = \"$start\" as uid $BKJS_USER and gid $BKJS_GROUP with timeout $timeout seconds $cycles stop program = \"$stop\"" > /etc/monit.d/$name.conf
    exit
    ;;

  help)
    echo ""
    echo "  monit-init-system - setup system monitoring with monit, CPU, disk"
    echo "  monit-init-bkjs - setup monit to keep $BKJS service running without using any other services and monitor"
    echo "  monit-stop-bkjs - stop monitoring $BKJS service by monit"
    echo "  monit-init-alerts - setup monit mail alerts, use DB config for the specified app name"
    echo "  monit-init -name NAME -start SCRIPT -stop SCRIPT - generate a monit service config"
    ;;
esac
