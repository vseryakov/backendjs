#!/bin/sh
#
#  Author: Vlad Seryakov vseryakov@gmail.com
#  Sep 2013
#

case "$BKJS_CMD" in

  redis-init)
    ($0 redis-get $(get_all_args))
    ($0 redis-run $(get_all_args))
    if [ "$PLATFORM" = "Linux" ]; then
       sudo $0 redis-init-monit
    fi
    exit
    ;;

  redis-get)
    # Install redis server
    case "$PLATFORM" in
     Darwin)
       OS=osx
       REDIS_PREFIX=$BKJS_PREFIX
       ;;

     Linux)
       REDIS_PREFIX=$BKJS_HOME
       ;;
    esac

    if [ -f $REDIS_PREFIX/bin/redis-server ]; then
        [ "$(get_flag -force)" = "" ] && exit
        echo "Uninstalling redis from $REDIS_PREFIX..."
        rm -f $REDIS_PREFIX/bin/redis-*
        cp $BKJS_HOME/etc/redis.local.conf $BKJS_HOME/etc/redis.local.conf.old
    fi

    ver=$(get_arg -version 7.2.4)
    curl -L -o redis.tgz http://download.redis.io/releases/redis-$ver.tar.gz

    mkdir -p redis $BKJS_HOME/etc
    tar -C redis --strip-components=1 -xzf redis.tgz
    make -C redis install PREFIX=$REDIS_PREFIX
    cp redis/redis.conf $BKJS_HOME/etc
    rm -rf redis redis.tgz
    $0 redis-config
    exit
    ;;

  redis-config)
    conf=$BKJS_HOME/etc/$REDIS.conf
    [ ! -f $conf ] && conf=/etc/$REDIS.conf
    local=$BKJS_HOME/etc/redis.local.conf

    if [ -z "$(grep -s $local $conf)" ]; then
        echo "include $local" >> $conf
    fi

    echo 'syslog-enabled yes' > $local
    echo "dir $BKJS_HOME/var/" >> $local
    echo "timeout 3600" >> $local
    echo "bind *" >> $local
    echo "protected-mode no" >> $local
    echo "pidfile $BKJS_HOME/var/redis.pid" >> $local
    echo "logfile $BKJS_HOME/log/redis.log" >> $local
    echo "tcp-keepalive 60" >> $local
    echo "maxmemory-policy volatile-lru" >> $local
    echo 'daemonize yes' >> $local

    [ "$(whoami)" = "root" -a -n "$BKJS_USER" ] && chown $BKJS_USER $local
    exit
    ;;

  redis-run)
    # Percent from the total memory
    memsize=$(get_arg -memsize)
    [ "$memsize" != "" ] && memmax="$(( ($(free -m|grep Mem:|awk '{print $2}') * $memsize) / 100 ))mb"
    memmax=$(get_arg -memmax $memmax)
    if [ "$memmax" != "" ]; then
        conf=$BKJS_HOME/etc/redis.local.conf
        if [ -z "$(grep -s "maxmemory $memmax" $conf)" ]; then
            echo "maxmemory $memmax" >> $conf
        fi
    fi

    if [ "$PLATFORM" = "Linux" ]; then
        echo 1 > /proc/sys/vm/overcommit_memory
        echo never > /sys/kernel/mm/transparent_hugepage/enabled
    fi

    conf=$BKJS_HOME/etc/redis.conf
    [ ! -f $conf ] && conf=/etc/redis.conf

    touch $BKJS_HOME/log/redis.log
    redis-server $conf

    slavehost=$(get_arg -slave-host)
    slaveport=$(get_arg -slave-port 6379)
    if [ "$slavehost" != "" ]; then
       redis-cli slaveof $slavehost $slaveport
    fi
    exit
    ;;

  redis-stop)
    pkill -f redis-server
    exit
    ;;

  redis-init-monit)
    find_user
    echo -e "$BKJS_HOME/log/redis.log {\n  weekly\n  rotate 10\n  copytruncate\n  delaycompress\n  compress\n  notifempty\n  missingok\n}" > /etc/logrotate.d/redis
    echo -e "check process redis-server with pidfile \"$BKJS_HOME/var/redis.pid\" start program = \"$BKJS_BIN redis-run $(get_all_args)\" as uid $BKJS_USER and gid $BKJS_GROUP stop program = \"$BKJS_BIN redis-stop\" if failed host 127.0.0.1 port 6379 for 2 cycles then restart" > /etc/monit.d/redis.conf
    exit
    ;;

  help)
    echo ""
    echo "  redis-get - install Redis server into $BKJS_PREFIX"
    echo "  redis-init - install and setup Redis server to be run on start and to be monitored (Linux only)"
    echo "  redis-run [-memsize PERCENT] [-memmax SIZE] [-slave-host HOST] - run local Redis server, uses config file $BKJS_HOME/etc/redis.conf"
    echo "  redis-stop - stop local Redis server"
    echo "  redis-init-monit [-memsize PERCENT] [-memmax SIZE] - setup Redis server to be run on start and to be monitored (Linux only)"
    echo ""
    ;;
esac

